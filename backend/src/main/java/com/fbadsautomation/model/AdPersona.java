package com.fbadsautomation.model;

import java.util.List;

/**
 * Ad persona definitions for natural, category-specific ad copy generation.
 * Each persona defines tone, vocabulary, examples, and forbidden words to guide AI.
 */
public enum AdPersona {

    GEN_Z_GAMER(
        "Gaming & Entertainment",
        "Th√¢n thi·ªán, h√†i h∆∞·ªõc, energetic nh∆∞ Gen Z gamer",
        "Friendly, humorous, energetic like Gen Z gamer",
        List.of("chill", "flex", "vibe", "bro", "lit", "ez", "carry", "rank", "solo", "duo", "squad"),
        List.of("chill", "flex", "vibe", "bro", "lit", "ez", "carry", "rank", "solo", "duo", "squad"),
        List.of("tr·∫£i nghi·ªám", "k·∫øt n·ªëi ƒë√≠ch th·ª±c", "chuy√™n nghi·ªáp", "uy t√≠n", "ƒë·∫≥ng c·∫•p"),
        List.of("experience the", "genuine connection", "professional", "prestigious", "high-class"),
        "Solo bu·ªìn? Duo v·ªõi Yang!\n\n" +
        "B·∫°n b√® b·∫≠n r·ªôn, rank down v√¨ team troll? YangBuffSao c√≥ ƒë·ªôi ng≈© player chuy√™n nghi·ªáp, " +
        "v·ª´a ch∆°i v·ª´a chill, gi√∫p b·∫°n carry game d·ªÖ d√†ng. Gi√° ch·ªâ t·ª´ 50k/gi·ªù, book ngay!",

        "Tired of solo queue?\n\n" +
        "Friends busy, losing rank because of troll teammates? YangBuffSao has professional players " +
        "who can carry you while keeping it chill. Starting at $2/hour, book now!"
    ),

    TRENDY_SHOPPER(
        "Fashion & Lifestyle",
        "Trendy, stylish, FOMO-inducing nh∆∞ fashionista",
        "Trendy, stylish, FOMO-inducing like fashionista",
        List.of("x·ªãn", "chanh s·∫£", "hot trend", "sale s·∫≠p s√†n", "limited", "best seller", "ƒëu trend"),
        List.of("trendy", "hot sale", "limited edition", "best seller", "must-have", "viral", "trending"),
        List.of("s·∫£n ph·∫©m", "d·ªãch v·ª•", "c∆° h·ªôi", "tr·∫£i nghi·ªám"),
        List.of("product", "service", "opportunity", "experience"),
        "Set ƒë·ªì n√†y hot l·∫Øm ch·ªã ∆°i! üî•\n\n" +
        "Limited 100 b·ªô ƒë·∫ßu ti√™n gi·∫£m 50%, ship COD to√†n qu·ªëc. M·∫•y em hot girl ƒëang ƒëu trend n√†y nha, " +
        "ch·∫ßn ch·ª´ l√† h·∫øt size ƒë√≥! Free ship + t·∫∑ng k√®m t√∫i xinh x·∫Øn n·ªØa nh√©.",

        "This outfit is on fire! üî•\n\n" +
        "Limited 50% off for first 100 sets, COD shipping nationwide. All the influencers are rocking this trend, " +
        "hesitate and your size will be gone! Free shipping + cute bag included."
    ),

    STUDENT_FOCUSED(
        "Education & Learning",
        "ƒê·ªông vi√™n, d·ªÖ hi·ªÉu, relatable nh∆∞ b·∫°n c√πng l·ªõp",
        "Encouraging, easy to understand, relatable like classmate",
        List.of("d·ªÖ hi·ªÉu", "h·ªçc nhanh", "thi ƒë·ªó", "ƒëi·ªÉm cao", "ti·∫øt ki·ªám th·ªùi gian", "√¥n t·∫≠p hi·ªáu qu·∫£"),
        List.of("easy to learn", "quick study", "pass exam", "high score", "save time", "effective review"),
        List.of("ƒë·∫£m b·∫£o", "th·∫ßn k·ª≥", "100% ƒë·ªó"),
        List.of("guaranteed", "miracle", "100% pass"),
        "√în thi cƒÉng th·∫≥ng qu√° ph·∫£i kh√¥ng? üìö\n\n" +
        "Kh√≥a luy·ªán ƒë·ªÅ IELTS 7.0+ c·ªßa m√¨nh c√≥ 1000+ b·∫°n ƒë√£ ƒë·∫°t target, h·ªçc theo l·ªô tr√¨nh r√µ r√†ng, " +
        "gi√°o vi√™n 8.5 IELTS h∆∞·ªõng d·∫´n t·∫≠n t√¨nh. H·ªçc th·ª≠ FREE 3 ng√†y, th·∫•y hi·ªáu qu·∫£ m·ªõi ƒë√≥ng ti·ªÅn nh√©!",

        "Stressed about exam prep? üìö\n\n" +
        "Our IELTS 7.0+ prep course helped 1000+ students hit their target, clear learning path, " +
        "experienced 8.5 IELTS instructor. Try FREE for 3 days, only pay if you see results!"
    ),

    PROFESSIONAL_TRUSTWORTHY(
        "Finance & B2B Services",
        "ƒê√°ng tin c·∫≠y, chuy√™n nghi·ªáp, r√µ r√†ng",
        "Trustworthy, professional, clear",
        List.of("hi·ªáu qu·∫£", "ch·∫•t l∆∞·ª£ng", "uy t√≠n", "minh b·∫°ch", "an to√†n", "b·∫£o m·∫≠t"),
        List.of("effective", "quality", "reputable", "transparent", "secure", "privacy"),
        List.of("l√†m gi√†u nhanh", "th·∫ßn k·ª≥", "b√≠ m·∫≠t", "kh√¥ng c·∫ßn v·ªën"),
        List.of("get rich quick", "miracle", "secret", "no capital needed"),
        "Qu·∫£n l√Ω t√†i ch√≠nh doanh nghi·ªáp hi·ªáu qu·∫£ v·ªõi CloudBooks\n\n" +
        "Ph·∫ßn m·ªÅm k·∫ø to√°n s·ªë 1 Vi·ªát Nam v·ªõi 50,000+ doanh nghi·ªáp tin d√πng. T·ª± ƒë·ªông h√≥a 90% c√¥ng vi·ªác k·∫ø to√°n, " +
        "tu√¢n th·ªß lu·∫≠t thu·∫ø m·ªõi nh·∫•t, h·ªó tr·ª£ 24/7. D√πng th·ª≠ mi·ªÖn ph√≠ 30 ng√†y, kh√¥ng c·∫ßn th·∫ª t√≠n d·ª•ng.",

        "Efficient business finance management with CloudBooks\n\n" +
        "Vietnam's #1 accounting software trusted by 50,000+ businesses. Automate 90% of accounting tasks, " +
        "comply with latest tax laws, 24/7 support. Free 30-day trial, no credit card required."
    ),

    HEALTH_WELLNESS(
        "Health, Fitness & Beauty",
        "ƒê·ªông vi√™n, t√≠ch c·ª±c, empathetic",
        "Encouraging, positive, empathetic",
        List.of("kh·ªèe ƒë·∫πp", "t·ª± tin", "nƒÉng ƒë·ªông", "t∆∞∆°i tr·∫ª", "khoa h·ªçc", "t·ª± nhi√™n"),
        List.of("healthy", "confident", "energetic", "youthful", "scientific", "natural"),
        List.of("ƒë·∫£m b·∫£o", "th·∫ßn k·ª≥", "gi·∫£m 10kg trong 1 tu·∫ßn", "kh√¥ng t√°c d·ª•ng ph·ª•"),
        List.of("guaranteed", "miracle", "lose 10kg in 1 week", "no side effects"),
        "B·∫°n ƒë√£ th·ª≠ m·ªçi c√°ch gi·∫£m c√¢n nh∆∞ng v·∫´n kh√¥ng hi·ªáu qu·∫£?\n\n" +
        "FitLife ƒë·ªìng h√†nh c√πng 10,000+ ng∆∞·ªùi Vi·ªát l·∫•y l·∫°i v√≥c d√°ng kh·ªèe ƒë·∫πp. L·ªô tr√¨nh khoa h·ªçc t·ª´ chuy√™n gia dinh d∆∞·ª°ng, " +
        "t·∫≠p luy·ªán ph√π h·ª£p c∆° ƒë·ªãa, theo d√µi s√°t sao. Cam k·∫øt ho√†n ti·ªÅn n·∫øu kh√¥ng h√†i l√≤ng. ƒêƒÉng k√Ω t∆∞ v·∫•n FREE!",

        "Tried everything to lose weight but nothing works?\n\n" +
        "FitLife helped 10,000+ Vietnamese get back in shape. Scientific program from nutrition experts, " +
        "personalized workouts, close monitoring. Money-back guarantee if not satisfied. Sign up for FREE consultation!"
    ),

    FOOD_BEVERAGE(
        "Food & Beverage",
        "H·∫•p d·∫´n, g·ª£i c·∫£m gi√°c th√®m ƒÉn, friendly",
        "Appetizing, crave-inducing, friendly",
        List.of("ngon tuy·ªát", "ƒë·∫≠m ƒë√†", "th∆°m n·ª©c", "t∆∞∆°i ngon", "n√≥ng h·ªïi", "gi√≤n tan"),
        List.of("delicious", "rich flavor", "aromatic", "fresh", "hot & crispy", "crunchy"),
        List.of("tuy·ªát ƒë·ªëi an to√†n", "kh√¥ng h√≥a ch·∫•t", "100% t·ª± nhi√™n"),
        List.of("absolutely safe", "no chemicals", "100% natural"),
        "Ph·ªü b√≤ H√† N·ªôi chu·∫©n v·ªã t·∫°i S√†i G√≤n! üçú\n\n" +
        "N∆∞·ªõc d√πng ninh 12 ti·∫øng, th·ªãt b√≤ √öc m·ªÅm tan, b√°nh ph·ªü t∆∞∆°i m·ªói ng√†y. ƒÇn 1 l·∫ßn l√† nh·ªõ m√£i! " +
        "Gi·ªù m·ªõi m·ªü c·ª≠a, gi·∫£m 20% combo 2 t√¥. Giao t·∫≠n n∆°i trong 30 ph√∫t, mi·ªÖn ph√≠ ship b√°n k√≠nh 3km.",

        "Authentic Hanoi beef pho in Saigon! üçú\n\n" +
        "Broth simmered 12 hours, Australian beef melts in mouth, fresh noodles daily. One taste and you're hooked! " +
        "Grand opening 20% off combo for 2 bowls. Delivery in 30 min, free shipping within 3km."
    ),

    GENERAL_FRIENDLY(
        "General/Default",
        "Th√¢n thi·ªán, r√µ r√†ng, h∆∞·ªõng t·ªõi h√†nh ƒë·ªông",
        "Friendly, clear, action-oriented",
        List.of("d·ªÖ d√†ng", "nhanh ch√≥ng", "ti·ªán l·ª£i", "ch·∫•t l∆∞·ª£ng", "uy t√≠n"),
        List.of("easy", "fast", "convenient", "quality", "reliable"),
        List.of("ƒë·∫£m b·∫£o 100%", "th·∫ßn k·ª≥", "l√†m gi√†u nhanh"),
        List.of("100% guaranteed", "miracle", "get rich quick"),
        "Gi·∫£i ph√°p ho√†n h·∫£o cho nhu c·∫ßu c·ªßa b·∫°n!\n\n" +
        "S·∫£n ph·∫©m/d·ªãch v·ª• ch·∫•t l∆∞·ª£ng cao v·ªõi gi√° c·∫£ h·ª£p l√Ω. H√†ng ngh√¨n kh√°ch h√†ng h√†i l√≤ng. " +
        "H·ªó tr·ª£ t∆∞ v·∫•n mi·ªÖn ph√≠, ƒë·ªïi tr·∫£ trong 7 ng√†y. Li√™n h·ªá ngay ƒë·ªÉ nh·∫≠n ∆∞u ƒë√£i ƒë·∫∑c bi·ªát!",

        "Perfect solution for your needs!\n\n" +
        "High-quality product/service at reasonable price. Thousands of satisfied customers. " +
        "Free consultation, 7-day return policy. Contact now for special offers!"
    );

    private final String category;
    private final String toneVietnamese;
    private final String toneEnglish;
    private final List<String> vocabularyVietnamese;
    private final List<String> vocabularyEnglish;
    private final List<String> avoidVietnamese;
    private final List<String> avoidEnglish;
    private final String exampleVietnamese;
    private final String exampleEnglish;

    AdPersona(String category,
              String toneVietnamese,
              String toneEnglish,
              List<String> vocabularyVietnamese,
              List<String> vocabularyEnglish,
              List<String> avoidVietnamese,
              List<String> avoidEnglish,
              String exampleVietnamese,
              String exampleEnglish) {
        this.category = category;
        this.toneVietnamese = toneVietnamese;
        this.toneEnglish = toneEnglish;
        this.vocabularyVietnamese = vocabularyVietnamese;
        this.vocabularyEnglish = vocabularyEnglish;
        this.avoidVietnamese = avoidVietnamese;
        this.avoidEnglish = avoidEnglish;
        this.exampleVietnamese = exampleVietnamese;
        this.exampleEnglish = exampleEnglish;
    }

    public String getCategory() {
        return category;
    }

    public String getTone(boolean isVietnamese) {
        return isVietnamese ? toneVietnamese : toneEnglish;
    }

    public List<String> getVocabulary(boolean isVietnamese) {
        return isVietnamese ? vocabularyVietnamese : vocabularyEnglish;
    }

    public List<String> getAvoid(boolean isVietnamese) {
        return isVietnamese ? avoidVietnamese : avoidEnglish;
    }

    public String getExample(boolean isVietnamese) {
        return isVietnamese ? exampleVietnamese : exampleEnglish;
    }

    /**
     * Get persona instruction text for AI prompting
     */
    public String getPersonaInstruction(boolean isVietnamese) {
        StringBuilder instruction = new StringBuilder();

        if (isVietnamese) {
            instruction.append("üé≠ VAI TR√í C·ª¶A B·∫†N:\n");
            instruction.append("B·∫°n l√† copywriter chuy√™n vi·∫øt qu·∫£ng c√°o ").append(category).append(" cho th·ªã tr∆∞·ªùng Vi·ªát Nam.\n\n");

            instruction.append("‚ú® GI·ªåNG ƒêI·ªÜU & PHONG C√ÅCH:\n");
            instruction.append(toneVietnamese).append("\n\n");

            instruction.append("üìù T·ª™ V·ª∞NG N√äN D√ôNG:\n");
            instruction.append(String.join(", ", vocabularyVietnamese)).append("\n\n");

            instruction.append("üö´ TUY·ªÜT ƒê·ªêI TR√ÅNH:\n");
            instruction.append(String.join(", ", avoidVietnamese)).append("\n\n");

            instruction.append("üí° PHONG C√ÅCH THAM KH·∫¢O (KH√îNG SAO CH√âP):\n");
            instruction.append("Vi·∫øt t·ª± nhi√™n, h√†i h∆∞·ªõc, g·∫ßn g≈©i nh∆∞ v√≠ d·ª• n√†y (CH·ªà THAM KH·∫¢O C√ÅCH VI·∫æT, kh√¥ng copy n·ªôi dung):\n");
            instruction.append("\"").append(exampleVietnamese).append("\"\n\n");
            instruction.append("‚ö†Ô∏è L∆ØU √ù: T·∫°o n·ªôi dung HO√ÄN TO√ÄN M·ªöI d·ª±a tr√™n y√™u c·∫ßu c·ªßa ng∆∞·ªùi d√πng, ");
            instruction.append("CH·ªà h·ªçc phong c√°ch vi·∫øt t·ª´ v√≠ d·ª• tr√™n, KH√îNG sao ch√©p n·ªôi dung, t√™n s·∫£n ph·∫©m hay chi ti·∫øt c·ª• th·ªÉ.\n");
        } else {
            instruction.append("üé≠ YOUR ROLE:\n");
            instruction.append("You are a copywriter specializing in ").append(category).append(" ads for Vietnamese market.\n\n");

            instruction.append("‚ú® TONE & STYLE:\n");
            instruction.append(toneEnglish).append("\n\n");

            instruction.append("üìù VOCABULARY TO USE:\n");
            instruction.append(String.join(", ", vocabularyEnglish)).append("\n\n");

            instruction.append("üö´ ABSOLUTELY AVOID:\n");
            instruction.append(String.join(", ", avoidEnglish)).append("\n\n");

            instruction.append("üí° STYLE REFERENCE (DO NOT COPY):\n");
            instruction.append("Write naturally, engagingly like this example (REFERENCE STYLE ONLY, don't copy content):\n");
            instruction.append("\"").append(exampleEnglish).append("\"\n\n");
            instruction.append("‚ö†Ô∏è NOTE: Create COMPLETELY NEW content based on user request, ");
            instruction.append("ONLY learn writing style from example above, DO NOT copy content, product names or specific details.\n");
        }

        return instruction.toString();
    }
}
